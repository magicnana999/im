//
//message的格式说明如下:
//消息由至少一个字段组合而成，类似于Go语言中的结构体，每个字段都有一定的格式
//（字段修饰符）数据类型 字段名称 = 唯一的编号标签值;
//
//唯一的编号标签：
//代表每个字段的一个唯一的编号标签，在同一个消息里不可以重复。这些编号标签用与在消息二进制格式中标识你的字段，并且消息一旦定义就不能更改。需要说明的是标签在1到15范围的采用一个字节进行编码，所以通常将标签1到15用于频繁发生的消 息字段。
//编号标签大小的范围是1到2的29次。19000-19999是官方预留的值，不能使用。
//
//注释格式：
//向.proto文件添加注释，可以使用C/C++/java/Go风格的双斜杠或者段落注释语法格式。
//
//message常见的数据类型与go中类型对比:
//.proto类型            Go类型            介绍
//double              ﬂoat64          64位浮点数
//ﬂoat                ﬂoat32          32位浮点数
//int32               int32           使用可变长度编码。编码负数效率低下——如果你的字段可能有负值， 请改用sint32。
//int64               int64           使用可变长度编码。编码负数效率低下——如果你的字段可能有负值， 请改用sint64。
//uint32              uint32          使用可变长度编码。
//uint64              uint64          使用可变长度编码。
//sint32              int32           使用可变长度编码。符号整型值。这些比常规int32s编码负数更有效。
//sint64              int64           使用可变长度编码。符号整型值。这些比常规int64s编码负数更有效。
//ﬁxed32              uint32          总是四字节。如果值通常大于228，则比uint 32更有效
//ﬁxed64              uint64          总是八字节。如果值通常大于256，则比uint64更有效
//sﬁxed32             int32           总是四字节。
//sﬁxed64             int64           总是八字节。
//bool                bool            布尔类型
//string              string          字符串必须始终包含UTF - 8编码或7位ASCII文本
//bytes               []byte          可以包含任意字节序列

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v4.25.3
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Packet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId         string                 `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Flow          int32                  `protobuf:"varint,4,opt,name=flow,proto3" json:"flow,omitempty"`
	NeedAck       int32                  `protobuf:"varint,5,opt,name=needAck,proto3" json:"needAck,omitempty"`
	Type          int32                  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	CTime         int64                  `protobuf:"varint,7,opt,name=cTime,proto3" json:"cTime,omitempty"`
	STime         int64                  `protobuf:"varint,8,opt,name=sTime,proto3" json:"sTime,omitempty"`
	Body          *anypb.Any             `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"` // for the "any" type field
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Packet) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Packet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Packet) GetFlow() int32 {
	if x != nil {
		return x.Flow
	}
	return 0
}

func (x *Packet) GetNeedAck() int32 {
	if x != nil {
		return x.NeedAck
	}
	return 0
}

func (x *Packet) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Packet) GetCTime() int64 {
	if x != nil {
		return x.CTime
	}
	return 0
}

func (x *Packet) GetSTime() int64 {
	if x != nil {
		return x.STime
	}
	return 0
}

func (x *Packet) GetBody() *anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type MessageBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MType         string                 `protobuf:"bytes,1,opt,name=mType,proto3" json:"mType,omitempty"`
	CId           string                 `protobuf:"bytes,2,opt,name=cId,proto3" json:"cId,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	GroupId       string                 `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TType         int32                  `protobuf:"varint,5,opt,name=tType,proto3" json:"tType,omitempty"` // int8 in Go maps to int32 in Proto3
	Sequence      int64                  `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Content       *anypb.Any             `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"` // For any type content
	At            []*At                  `protobuf:"bytes,8,rep,name=at,proto3" json:"at,omitempty"`           // At list
	Refer         []*Refer               `protobuf:"bytes,9,rep,name=refer,proto3" json:"refer,omitempty"`     // Refer list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageBody) Reset() {
	*x = MessageBody{}
	mi := &file_packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBody) ProtoMessage() {}

func (x *MessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBody.ProtoReflect.Descriptor instead.
func (*MessageBody) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *MessageBody) GetMType() string {
	if x != nil {
		return x.MType
	}
	return ""
}

func (x *MessageBody) GetCId() string {
	if x != nil {
		return x.CId
	}
	return ""
}

func (x *MessageBody) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MessageBody) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MessageBody) GetTType() int32 {
	if x != nil {
		return x.TType
	}
	return 0
}

func (x *MessageBody) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MessageBody) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MessageBody) GetAt() []*At {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *MessageBody) GetRefer() []*Refer {
	if x != nil {
		return x.Refer
	}
	return nil
}

type At struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *At) Reset() {
	*x = At{}
	mi := &file_packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *At) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*At) ProtoMessage() {}

func (x *At) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use At.ProtoReflect.Descriptor instead.
func (*At) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *At) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *At) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *At) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type Refer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	MType         string                 `protobuf:"bytes,4,opt,name=mType,proto3" json:"mType,omitempty"`
	Content       *anypb.Any             `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"` // For any type body
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Refer) Reset() {
	*x = Refer{}
	mi := &file_packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Refer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refer) ProtoMessage() {}

func (x *Refer) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refer.ProtoReflect.Descriptor instead.
func (*Refer) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *Refer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Refer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Refer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Refer) GetMType() string {
	if x != nil {
		return x.MType
	}
	return ""
}

func (x *Refer) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

type TextBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextBody) Reset() {
	*x = TextBody{}
	mi := &file_packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextBody) ProtoMessage() {}

func (x *TextBody) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextBody.ProtoReflect.Descriptor instead.
func (*TextBody) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *TextBody) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ImageBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width         int32                  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageBody) Reset() {
	*x = ImageBody{}
	mi := &file_packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageBody) ProtoMessage() {}

func (x *ImageBody) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageBody.ProtoReflect.Descriptor instead.
func (*ImageBody) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *ImageBody) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImageBody) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageBody) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AudioBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Length        int32                  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioBody) Reset() {
	*x = AudioBody{}
	mi := &file_packet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioBody) ProtoMessage() {}

func (x *AudioBody) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioBody.ProtoReflect.Descriptor instead.
func (*AudioBody) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{6}
}

func (x *AudioBody) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AudioBody) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VideoBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Cover         string                 `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Length        int32                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Width         int32                  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoBody) Reset() {
	*x = VideoBody{}
	mi := &file_packet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBody) ProtoMessage() {}

func (x *VideoBody) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBody.ProtoReflect.Descriptor instead.
func (*VideoBody) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{7}
}

func (x *VideoBody) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoBody) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *VideoBody) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *VideoBody) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoBody) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01,
	0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x65, 0x64, 0x41, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x65,
	0x64, 0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xfa,
	0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x52, 0x02, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x52, 0x05, 0x72, 0x65, 0x66, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x02, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x66, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x65, 0x78,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4b, 0x0a, 0x09, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x35, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x79, 0x0a,
	0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData = file_packet_proto_rawDesc
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_proto_rawDescData)
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_packet_proto_goTypes = []any{
	(*Packet)(nil),      // 0: pb.Packet
	(*MessageBody)(nil), // 1: pb.MessageBody
	(*At)(nil),          // 2: pb.At
	(*Refer)(nil),       // 3: pb.Refer
	(*TextBody)(nil),    // 4: pb.TextBody
	(*ImageBody)(nil),   // 5: pb.ImageBody
	(*AudioBody)(nil),   // 6: pb.AudioBody
	(*VideoBody)(nil),   // 7: pb.VideoBody
	(*anypb.Any)(nil),   // 8: google.protobuf.Any
}
var file_packet_proto_depIdxs = []int32{
	8, // 0: pb.Packet.body:type_name -> google.protobuf.Any
	8, // 1: pb.MessageBody.content:type_name -> google.protobuf.Any
	2, // 2: pb.MessageBody.at:type_name -> pb.At
	3, // 3: pb.MessageBody.refer:type_name -> pb.Refer
	8, // 4: pb.Refer.content:type_name -> google.protobuf.Any
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_rawDesc = nil
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
